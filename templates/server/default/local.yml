version: '3.8'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: backend_template_local_django
    container_name: django
    depends_on:
      - postgres
      - elasticsearch
      - redis
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/local/postgres/Dockerfile
    image: backend_template_production_postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

  redis:
    image: redis
    container_name: redis

  celeryworker:
    <<: *django
    image: backend_template_local_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
      - django
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: backend_template_local_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
      - django
    ports: []
    command: /start-celerybeat

  elasticsearch:
    image: elasticsearch:7.16.2
    container_name: elastic_search
    ports:
      - 9200:9200
    environment:
      discovery.type: 'single-node'
      ES_JAVA_OPTS: '-Xms256m -Xmx256m'
      xpack.security.enabled: 'false'
